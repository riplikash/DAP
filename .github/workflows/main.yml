name: Build and Deploy

on:
  push:
    branches:
      - master

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      # Build the project (replace with your build command if needed)
      - name: Build
        run: dotnet build --configuration Release

      # Output the packages
      - name: Output Packages
        run: dotnet list package --format json
        
      - name: Print working directory and its contents
        run: |
          pwd
          ls -la
      
      # Increment version in .nuspec file
      - name: Increment Version
        id: version
        run: |
          # Use PowerShell to parse and update the XML
          $nuspec = [xml](Get-Content ./DapperAutoData/DapperAutoData.nuspec)
          $currentVersion = [version]$nuspec.package.metadata.version
          $newVersion = [version]::new($currentVersion.Major, $currentVersion.Minor, $currentVersion.Build + 1)
          $nuspec.package.metadata.version = $newVersion.ToString()
          $nuspec.Save("./DapperAutoData/DapperAutoData.nuspec")

          # Output the new version
          echo "::set-output name=new_version::$newVersion"
        shell: pwsh
      
      # Pack the project
      - name: Pack
        run: dotnet pack --configuration Release --output ./packages
      
      # Publish the package to NuGet
      - name: Publish to NuGet
        uses: nuget/setup-nuget@v1
        with:
          nuget-api-key: ${{ secrets.NUGET_API_KEY }}
      
      - name: Upload Package
        run: dotnet nuget push ./packages/*.nupkg --source "https://api.nuget.org/v3/index.json" --skip-duplicate --api-key "${{ secrets.NUGET_API_KEY }}"
